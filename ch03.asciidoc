== Components

In addtion to all of the markup provided in the previous chapter, Bootstrap provides a toolkit of flexible components that can be used in designing application interfaces, web features and more.

=== Dropdown Menus

Dropdown menus are a toggleable, contextual menu for displaying links in a list format. To make this interactive, you need to use either the dropdown JavaScript plugin, or the full compiled Bootstrap plugin.

.Basic Dropdown Menu
image::images/dropdown.png[]

[source, html]
----
<ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu">
  <li><a tabindex="-1" href="#">Action</a></li>
  <li><a tabindex="-1" href="#">Another action</a></li>
  <li><a tabindex="-1" href="#">Something else here</a></li>
  <li class="divider"></li>
  <li><a tabindex="-1" href="#">Separated link</a></li>
</ul>
----

==== Options

===== Right align the dropdown

Add .pull-right to a .dropdown-menu to right align the dropdown menu.

[source, html]
----
<ul class="dropdown-menu pull-right" role="menu" aria-labelledby="dLabel">
  ...
</ul>
----

If you would like to add a second layer of dropdowns, simply add `.dropdown-submenu` to any `<li>` in an existing dropdown menu for automatic styling.

===== Dropdown Submenu
image:images/dropdown-sub.png[]

[source,html]
----
<ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
  ...
  <li class="dropdown-submenu">
    <a tabindex="-1" href="#">More options</a>
    <ul class="dropdown-menu">
      ...
    </ul>
  </li>
</ul>
----

=== Button Groups

Button groups allow multiple buttons to be stacked together. This is useful like the example below when you want to place items like alignment buttons together. Simply, to create a button group, simply wrap a series of anchors or buttons with a class of `.btn` with a `<div>` that has `.btn-group` as a class.

.Inline Button Group
image::images/btn-group.new.png

.Inline Button Group Code Example
[source,html]
----
<div class="btn-group">
  <button class="btn">1</button>
  <button class="btn">2</button>
  <button class="btn">3</button>
</div>
----

If you have multiple button groups that you want to align on a single line, wrap multiple `.btn-group` with `.btn-toolbar`.

.Button Toolbar
image::images/btn-toolbar.png[]

.Button Toolbar Code Example
[source, html]
----
<div class="btn-toolbar">
  <div class="btn-group">
    <a class="btn" href="#"><i class="icon-align-left"></i></a>
    <a class="btn" href="#"><i class="icon-align-center"></i></a>
    <a class="btn" href="#"><i class="icon-align-right"></i></a>
    <a class="btn" href="#"><i class="icon-align-justify"></i></a>
  </div>
  <div class="btn-group">
    <a class="btn" href="#"><i class="icon-italic"></i></a>
    <a class="btn" href="#"><i class="icon-bold"></i></a>
    <a class="btn" href="#"><i class="icon-font"></i></a>
    <a class="btn" href="#"><i class="icon-text-height"></i></a>
    <a class="btn" href="#"><i class="icon-text-width"></i></a>
  </div>
  <div class="btn-group">
    <a class="btn" href="#"><i class="icon-indent-left"></i></a>
    <a class="btn" href="#"><i class="icon-indent-right"></i></a>
  </div>
</div>
----

To make the buttons stack, simply add `.btn-group-vertical` to the `.btn-group` class. 

.Vertical Button Group
image::images/btn-group-vertical.png[]

.Vertical Button Group Code
[source, html]
----
<div class="btn-group btn-group-vertical">
  ...
</div>
----

==== Button Groups as Radio and Checkboxes

To have the checkboes function as radio buttons where only one can be selected at a time, or checkboxes where multiple can be selected, simply use simply need to add some extra markup and the Bootsrap JavaScript will provide the rest. 

.Heads Up!
NOTE: To use a button with a dropdown, they must be individually wrapped in their own `btn-group` within a `btn-toolbar` for proper rendering.



=== Buttons With Dropdowns

To add a dropdown to a button, simply wrap a button and a dropdown menu in a `.btn-group`. You can also use a `<span class="caret"></span>` to act as an indicator that the button is a dropwdown. 

.Button with a Dropdown
image::images/btn-dropdown.png[]

.Button Dropdown Code
[source,html]
----------------------------------------------------------------------
<div class="btn-group">
  <a class="btn dropdown-toggle" data-toggle="dropdown" href="#">
    Action
    <span class="caret"></span>
  </a>
  <ul class="dropdown-menu">
    <li><a href="#">First Link</a>
    <li><a href="#">Second Link</a>
    <li class="divider">First Link</li>
    <li><a href="#">Third Link</a>
  </ul>
</div>
----------------------------------------------------------------------

You can use the dropdowns with any button size, `.btn-large` `.btn`, `.btn-small` and `.btn-mini`.

.Button Dropdown Sizes
image::images/btn-dropdown-sizes.png[]

==== Split Button Dropdowns

Using the same general styles of the dropdown button, but adding a primary action along with the dropdown, split buttons have the primary action on the left, and the a toggle on the right for the dropdown.

.Split Button Dropdown
image::images/btn-split-dropdown.png[]

.Split Button Dropdown Code Example
[source,html]
----
<div class="btn-group">
  <button class="btn">Action</button>
  <button class="btn dropdown-toggle" data-toggle="dropdown">
    <span class="caret"></span>
  </button>
  <ul class="dropdown-menu">
    <!-- dropdown menu links -->
  </ul>
</div>
----

jsfiddle::http://jsfiddle.net/vSHkJ/embedded/result/[width="100%", height="300px"]

==== Dropup Menus

Menus can also be built to dropup, rather then down. To make this change, simply add `.dropup` to the `.btn-group` container. To have the button pullup from the right hand side, add `.pull-right` to the `.dropdown-menu`.

.Dropup Menu
image::images/btn-dropup.png[]

.Dropup Menu Code Example
[source, html]
----
<div class="btn-group dropup">
  <button class="btn">Dropup</button>
  <button class="btn dropdown-toggle" data-toggle="dropdown">
    <span class="caret"></span>
  </button>
  <ul class="dropdown-menu">
    <!-- dropdown menu links -->
  </ul>
</div>
----

jsfiddle::http://jsfiddle.net/DyfSZ/3/embedded/result/[width="100%", height="300px"]

=== Navigation Elements

Bootstrap provides a few different opportunities for styling naviagation elements. All of them share the same markup and base class `.nav`. 

==== Tabular Navigation

To create a tabbed navigation menu, start with a basic unordered list with the base class of `.nav` and add `.nav-tabs`.

.Tabbed Navigation
image::images/nav-tabs.png[]

.Tabbed Navigation Code Example
[source, html]
----
<ul class="nav nav-tabs">
  <li class="active">
    <a href="#">Home</a>
  </li>
  <li><a href="#">...</a></li>
  <li><a href="#">...</a></li>
</ul>
----

==== Basic Pills Navigation

To turn the tabs into pills, instead of using the `.nav-tabs` use `.nav-pills`.

.Tabbed Navigation
image::images/nav-pills.png[]

.Tabbed Navigation Code Example
[source, html]
----
<ul class="nav nav-pills">
  <li class="active">
    <a href="#">Home</a>
  </li>
  <li><a href="#">...</a></li>
  <li><a href="#">...</a></li>
</ul>
----

===== Disabled Class

For each of the `.nav` classes, if you add the `.disabled` class, it will create gray link that also disables the hover state. The link is still clickable unless the `href` is removed, with javascript or some other method.

.Disabled Navigation
image::images/nav-disabled.png[]

.Disabled Navigation Code Example
[source, html]
----
<ul class="nav nav-pills">
  ...
  <li class="disabled"><a href="#">Home</a></li>
  ...
</ul>
----

==== Stackable Navs

Both tabs and pills are horizontal by default, to make them stackable, just add the `.nav-stacked` class to make them appear vertically stacked.

.Stacked Tabs
image::images/stacked-tabs.png[]

.Stacked Tabs Code Example
[source, html]
----
<ul class="nav nav-tabs nav-stacked">
  ...
</ul>
----


.Stacked Pills
image::images/stacked-pills.png[]

.Stacked Pills Code Example
[source, html]
----
<ul class="nav nav-pills nav-stacked">
  ...
</ul>
----

==== Dropdowns

Navigation menus share a similir syntax to dropdown menus. By default, you have a list item that has an anchor that works in conjuntion with some `data-` attributes to trigger an unodered list with a `.dropdown-menu` class. 

.Tabbed Navigation with a Dropdown Menu
image::images/tab-dropdown.png[]

.Tabbed Navigation Dropdown Code Example
[source, html]
----
<ul class="nav nav-tabs">
	<li class="dropdown">
		<a class="dropdown-toggle"
			data-toggle="dropdown"
			href="#">
			Dropdown
			<b class="caret"></b>
		</a>
		<ul class="dropdown-munu">
			<!--links-->
		</ul>
	</li>
</ul>
----

To do the same thing with pills, simply swap the `.nav-tabs` class with `.nav-pills`.

.Pill Navigation with Dropdowns
image::images/pill-dropdown.png[]

.Pill Navigation Dropdown Code Example
[source, html]
----
<ul class="nav nav-pills">
	<li class="dropdown">
		<a class="dropdown-toggle"
			data-toggle="dropdown"
			href="#">
			Dropdown
			<b class="caret"></b>
		</a>
		<ul class="dropdown-munu">
			<!--links-->
		</ul>
	</li>
</ul>
----

==== Navigation Lists

Navigation lists are useful when you need to display a group of navigation links. This type of interface element is common when building admin interfaces in websites. In the MAKE admin interface, I have one of these on the sidebar of every page with quick links to common pages. A form of this is what that Bootstrap developers use for their documentation. Like all of the lists that we have discusses thus far, this is simply an unordered list with the `.nav` class, and to give it it's specific styling, we add the `.nav-list` class.

.Navigation List
image::images/nav-list.png[]

.Navigation List Code Example
[source, html]
----
<ul class="nav nav-list">
	<li class="nav-header">List Header</li>
	<li class="active"><a href="/">Home</a></li>
	<li><a href="#">Blog</a></li>
	<li class="divider"></li>
	<li><a href="#">Contact</a></li>
</ul>
----

===== Horizontal Divider

To create a divider, much like an `<hr />`, use an empty `<li>` with a class of `.divider`.

.Horizontal Divider
[source, html]
----
<ul class="nav-menu">
	...
	<li class="divider"></li>
	....
</ul>
----

==== Tabbable Navigation

Not only can you create a tabbed navigation, but by using the JavaScript plugin, you can also add some interaction by making them tab able to open different windows of content. To make navigation tabs tabbable, create a `.tab-pance with a unique ID for every tab, and then wrap them in `.tab-content`.

.Tabbable Navigation Example
image::images/tabbable-top.png[]

.Tabble Navigation Code Example
[source, html]
----
<div class="tabbable">
	<ul class="nav nav-tabs">
		<li class="active"><a href="#tab1" data-toggle="tab">Section 1</a></li>
		<li><a href="#tab2" data-toggle="tab">Section 2</a></li>
	</ul>
	<div class="tab-content">
		<div class="tab-pane active" id="tab1">
			<p>I'm in section 1, howdy howdy howdy...</p>
		</div>
		<div class="tab-pane" id="tab2">
			<p>I'm in section 2, you can call me Bruce.</p>
		</div>
	</div>
</div>
----

jsfiddle::http://jsfiddle.net/JUqAT/embedded/result/[width="100%", height="300px"]

If you want to make the tabs fade when switching, add `.fade` to each `.tab-pane`.

===== Tab Position

The tabs are fully positionable, you can have them above, below, or on the sides of the content. 

.Bottom Tabs
image::images/tab-bottom.png[]

.Bottom Tab Example
[source,html]
----
<div class="tabbable tabs-below">
  <div class="tab-content">
    ...
  </div>
  <ul class="nav nav-tabs">
    ...
  </ul>
</div>
----

Tabs on the left get the `.tabs-left` class.

.Left Tabs
image::images/tab-left.png[]

.Left Tab Example
[source,html]
----
<div class="tabbable tabs-left">
  <div class="tab-content">
    ...
  </div>
  <ul class="nav nav-tabs">
    ...
  </ul>
</div>
----

Tabs on the right get the `.tabs-right` class.

.Right Tabs
image::images/tab-right.png[]

.Right Tab Example
[source,html]
----
<div class="tabbable tabs-right">
  <div class="tab-content">
    ...
  </div>
  <ul class="nav nav-tabs">
    ...
  </ul>
</div>
----

.Heads Up!
NOTE: As a footnote here to the tabbable elements, you can use the markup here to control a varierty of things, perhaps outside of the scope of the default usage mechanism. On MAKE's site, I used this to control the navigation, and subnavigation. When you click on the navigation menu, the sub navigation would change and show different links.
			
=== Navbar

The Navbar is a nice feature, and one of the prominant features of Bootstrap sites. At the core, the navbar includes styling for site names, and basic navigation. It can later be extended by adding form specific controls, and specialized dropdowns. To be sure that the navbar is constrained to the width of the content of the page, either place it inside of a `.span12` or the `.container` class.

.Basic Navbar Example
image::images/navbar.png[]

.Basic Navbar Code Example
[source, html]
----
<div class="navbar">
  <div class="navbar-inner">
    <a class="brand" href="#">Title</a>
    <ul class="nav">
      <li class="active"><a href="#">Home</a></li>
      <li><a href="#">Link</a></li>
      <li><a href="#">Link</a></li>
    </ul>
  </div>
</div>
----

In the code above, note the `.brand` class, this will give the text a lighter `font-weight` and slightly larger size.

.Brand Class Example
[source, html]
----
<a class="brand" href="#">Project name</a>
----

==== Nav Links

To add links to the navbar, simply add an unordered list with the class of `.nav`. If you want to add a divided to your links, you can do that by adding an empty list item with a class of `.divider-vertical`. 

.Nav Links
image::images/navbar-links.png[]

.Navbar Links Code Example
[source, html]
----
<ul class="nav">
  <li class="active"><a href="#">Home</a></li>
  <li><a href="#">First Link</a></li>
  <li><a href="#">Second Link</a></li>
  <li class="divider-vertical"></li>
  <li><a href="#">Third Link</a></li> 
</ul>
----

==== Forms

Instead of using the default, class based forms from chapter 2, forms that are in the navbar use the `.navbar-form` class. This ensures that the forms margins are properly set, and match the nav stylings. Of note, `.pull-left`, and `.pull-right` helper classes may help move the form in the proper position. 

.Default Navbar Form
image::images/navbar-form.png[]

.Default Navbar Form Styling
[source, html]
----
<form class="navbar-form pull-right">
	<input type="text" class="span2" id="fname">
	<button type="submit" class="btn">
</form>
----

To add rounded corners, taking style cues from the search inputs of iOS devices, instead of using `.navbar-form`, use the `.navbar-search` class. 

.Navbar Search Input
image::images/navbar-search.png[]

.Navbar Search Input Code Example
[source, html]
----
<form class="navbar-search"  accept-charset="utf-8">
	<input type="text" class="search-query" placeholder="Search">
</form>
----

==== Navbar Menu Variations

The Bootstrap navbar can be dynamic in it's positioning. By default, it is a block level element that takes its positioning based on its placement in the HTML. With a few helper classes, you can place it either to the top or bottom of the page, or have it scroll statically with the page. 

===== Fixed to the top

If you want the navbar fixed to the top, simply add `.navbar-fixed-top` to the `.navbar` class. To prevent the navbar from sitting on top of other content in the body of the page, add at least 40 pixels of `padding` to the `<body>` tag.

.Fixed Top Navbar
[source, html]
----
<div class="navbar navbar-fixed-top">
  ...	
</div>
----

===== Fixed Bottom Navbar

To affix the navbar to the bottom of the page, simply add `.fixed-navbar-bottom` class to the navbar. Once again, to prevent overlap, add at least 40 pixels of `padding` to the `<body>` tag.

.Fixed Bottom Navbar
[source, html]
----
<div class="navbar navbar-fixed-bottom">
  ...	
</div>
----

===== Static Top Navbar

To create a navbar that scrolls with the page, add the `.navbar-static-top` class. This class does not require adding the padding to the body.

.Static Top Navbar
[source, html]
----
<div class="navbar navbar-static-top">
  ...	
</div>
----

===== Responsive Navbar

Like the rest of Bootstrap, the navbar can be totally responsive. To add the responsive features, the content that you want to be collapsed needs to be wrapped in a `<div>` with `.nav-collapse.collapse` as a class. The collapsing nature is tripped by a button that has a the class of `.btn-navbar` and then features two `data-` elements. The first, `data-toggle` is used to tell the JavaScript what to do with the button, and the second, `data-target` tells which element to toggle. In the example below, three `<spans>` with a class of `.icon-bar` create what I like to call the hamburger button. This will toggle the elements that in the `.nav-collapse` `<div>`.

.Responsive Navbar
image::images/navbar-responsive.png[]

.Responsive Navbar Code Example
[source, html]
----
<div class="header">
	<div class="navbar-inner">
		<div class="container">
			<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse"> 
				<span class="icon-bar"></span>
				<span class="icon-bar"></span>
				<span class="icon-bar"></span>
			</a>
		
			<!-- Leave the brand out if you want it to be shown when other elements are collapsed... -->
			<a href="#" class="brand">Project Name</a>
			
			<!-- Everything that you want collapsed, add it to the collapse div. -->
			<div class="nav-collapse collapse">
				<!-- .nav, .navbar-search etc... -->
			</div>
			
		</div>
	</div>
</div>
----

===== Inverted Navbar

To created an inverted navbar, where the background is black, with white text, simply add `.navbar-inverse` to the `.navbar` class. 

.Inverted Navbar
image::images/navbar-inverse.png[]

.Inverted Navbar Code Example
[source, html]
----
<div class="navbar navbar-inverse">
	...
</div>
----

=== Breadcrumbs

Breadcrumbs are a great way to show hierarchy based information for a site. In the case of blogs, it could show the dates of publishing, categories or tags, or for a full CMS, any type of information. A breadcrumb in Bootstrap is simply an unordered list with a class of `.breadcrumb`. There is a also a helper class of `.divider` that mutes the colors and makes the text a little smaller too. You could use forward slashes, arrows, or any divided that you choose.

.Breadcrumb Example
image::images/breadcrumbs.png[]

.Breadcrumb Code Example
[source, html]
----
<ul class="breadcrumb">
	<li><a href="#">Home</a> <span class="divider">/</span></li>
	<li><a href="#">2012</a> <span class="divider">/</span></li>
	<li><a href="#">December</a> <span class="divider">/</span></li>
	<li><a href="#">5</a></li>
</ul>
----

=== Pagination

Bootstrap handles pagination like a lot of interface elements, an unordered list, with wrapper `<div>` that has a specific class that identifies the element. In the basic form, adding `.pagination` do the parent `<div>` creates a row of bordered links. Each of the list items can be additionaly styled by using the `.disabled` or `.active` class.

.Basic Pagination Example
image::images/pagination.png[]

.Basic Pagination Code Exampl
[source, html]
----
<div class="pagination">
  <ul>
    <li><a href="#">Prev</a></li>
    <li><a href="#">1</a></li>
    <li><a href="#">2</a></li>
    <li><a href="#">3</a></li>
    <li><a href="#">4</a></li>
    <li><a href="#">Next</a></li>
  </ul>
</div>
----

.Pagination with helper classes
images::images/pagination-centered.png[]

.Pagination with helper classes code example
[source, html]
----

<div class="pagination pagination-centered">
  <ul>
    <li class="disabled"><a href="#">«</a></li>
    <li class="active"><a href="#">1</a></li>
    <li><a href="#">2</a></li>
    <li><a href="#">3</a></li>
    <li><a href="#">4</a></li>
    <li><a href="#">5</a></li>
    <li><a href="#">»</a></li>
  </ul>
</div>
----

In addition to the `.active` and `.disabled` classes for list items, you can also add `.pagination-centerd` to the parent `<div>`. This will center the contents of the div. If you want the items right aligned in the `<div>` add  `.pagination-right`. For sizing, in addition to the normal size, there are three other sizes, applied by adding a class to the wrapper `<div>`. They are: `.pagination-large`, `pagination-small` and `pagination-mini`.

.Pagination Sizes
image::images/pagination-sizes.png[]

.Pagination Code Example
[source, html]
----
<div class="pagination pagination-large">
  <ul>
    ...
  </ul>
</div>
<div class="pagination">
  <ul>
    ...
  </ul>
</div>
<div class="pagination pagination-small">
  <ul>
    ...
  </ul>
</div>
<div class="pagination pagination-mini">
  <ul>
    ...
  </ul>
</div>
----

==== Pager

If you need to create simple pagination links that go beyond text, the pager can work quite well. Like the pagination links, the markup is an unodered list that sheds the wrapper `<div>`. By default, the links are centered.

.Basic Pager
image::images/pager.png[]

.Basic Pager Code Example
[source, html]
----
<ul class="pager">
  <li><a href="#">Previous</a></li>
  <li><a href="#">Next</a></li>
</ul>
----

To left/right align the different links, you just need to add the `.previous` and `.next` class to the list-items. Also, like `.pagination` above, you can add the disabled class for a muted look.

.Aligned Page Links
image::images/pager-aligned.png[]

.Aligned Page Links Code Example
[source, html]
----
<ul class="pager">
  <li class="previous">
    <a href="#">&larr; Older</a>
  </li>
  <li class="next">
    <a href="#">Newer &rarr;</a>
  </li>
</ul>
----

=== Labels and Badges

Labels and Badges are great for offering counts, tips, or other markup for pages. Another one of my favorite little Bootstrap touches.

.Labels
image::images/labels.png[]

.Label Markup
[source, html]
----
<span class="label">Default</span>
<span class="label label-success">Success</span>
<span class="label label-warning">Warning</span>
<span class="label label-important">Important</span>
<span class="label label-info">Info</span>
<span class="label label-inverse">Inverse</span>
----

==== Badges

Badges are similar to labels, the primary difference is that they have more rounded corners. The colors of badges reflect the same classes as labels.

.Badges
image::images/badges.png[]

.Badges Code Example
[source, html]
----
<span class="badge">1</span>
<span class="badge badge-success">2</span>
<span class="badge badge-warning">4</span>
<span class="badge badge-important">6</span>
<span class="badge badge-info">8</span>
<span class="badge badge-inverse">10</span>
----


=== Typographic Elements

In addition to buttons, labels, forms, tables and tabs, Bootstrap has a few more elements for basic page layout. The hero unit is a large, content area that increased the size of headings, and adds a lot of margin for landing page content. To use, simply create a container `<div>` with the class of '.hero-unit'. In addition to a larger `<h1>`, all the `font-weight` is reduced to 200.

.Hero Unit
image::images/hero-unit.png[]

.Hero Unit Code Example
[source, html]
----
<div class="hero-unit">
  <h1>Heading</h1>
  <p>Tagline</p>
  <p>
    <a class="btn btn-primary btn-large">Learn more</a>
  </p>
</div>
----

=== Thumbnails

=== Alerts

=== Progress bars

=== Misc
